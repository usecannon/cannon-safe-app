{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tout/Sites/usecannon/cannon-safe-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tout/Sites/usecannon/cannon-safe-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"/Users/tout/Sites/usecannon/cannon-safe-app/src/Cannon.tsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSafeAppsSDK } from '@safe-global/safe-apps-react-sdk';\nimport { IPFSLoader, OnChainRegistry } from '@usecannon/builder';\n\n// TODO: move to dynamic\nvar IPFS_URL = 'https://usecannon.infura-ipfs.io';\nvar registryProviderUrl = 'https://mainnet.infura.io/v3/4791c1745a1f44ce831e94be7f9e8bd7';\nvar registryAddress = '0x8E5C7EFC9636A6A0408A46BB7F617094B81e5dba';\n\n// has one text box and one button\nvar Cannon = function Cannon() {\n  var _useSafeAppsSDK = useSafeAppsSDK(),\n    safe = _useSafeAppsSDK.safe;\n  var chainId = safe.chainId;\n\n  // const chainId = 13370\n  var preset = 'main';\n  var packageName = 'synthetix:latest';\n  useEffect(function () {\n    var getDeploy = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var registry, loader, deployInfo;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              registry = new OnChainRegistry({\n                signerOrProvider: registryProviderUrl,\n                address: registryAddress\n              });\n              loader = new IPFSLoader(IPFS_URL, registry);\n              _context.prev = 2;\n              _context.next = 5;\n              return loader.readDeploy(packageName, preset, chainId);\n            case 5:\n              deployInfo = _context.sent;\n              if (deployInfo) {\n                _context.next = 8;\n                break;\n              }\n              throw new Error(\"Package not found: \".concat(packageName, \" (\").concat(chainId, \"-\").concat(preset, \")\"));\n            case 8:\n              console.log('deployInfo: ', deployInfo);\n              _context.next = 14;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(_context.t0);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n      return function getDeploy() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getDeploy();\n  }, [chainId]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, \"test\");\n};\nexport default Cannon;","map":{"version":3,"names":["React","useEffect","useSafeAppsSDK","IPFSLoader","OnChainRegistry","IPFS_URL","registryProviderUrl","registryAddress","Cannon","safe","chainId","preset","packageName","getDeploy","registry","signerOrProvider","address","loader","readDeploy","deployInfo","Error","console","log","error"],"sources":["/Users/tout/Sites/usecannon/cannon-safe-app/src/Cannon.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useSafeAppsSDK } from '@safe-global/safe-apps-react-sdk'\nimport { IPFSLoader, OnChainRegistry } from '@usecannon/builder'\n\n// TODO: move to dynamic\nconst IPFS_URL = 'https://usecannon.infura-ipfs.io'\nconst registryProviderUrl = 'https://mainnet.infura.io/v3/4791c1745a1f44ce831e94be7f9e8bd7'\nconst registryAddress = '0x8E5C7EFC9636A6A0408A46BB7F617094B81e5dba'\n\n// has one text box and one button\nconst Cannon = (): React.ReactElement => {\n  const { safe } = useSafeAppsSDK()\n  const { chainId } = safe\n\n  // const chainId = 13370\n  const preset = 'main'\n  const packageName = 'synthetix:latest'\n\n  useEffect(() => {\n    const getDeploy = async () => {\n      const registry = new OnChainRegistry({\n        signerOrProvider: registryProviderUrl,\n        address: registryAddress,\n      })\n\n      const loader = new IPFSLoader(IPFS_URL, registry)\n\n      try {\n        const deployInfo = await loader.readDeploy(packageName, preset, chainId)\n\n        if (!deployInfo) {\n          throw new Error(`Package not found: ${packageName} (${chainId}-${preset})`)\n        }\n\n        console.log('deployInfo: ', deployInfo)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    getDeploy()\n  }, [chainId])\n\n  return <div>test</div>\n}\n\nexport default Cannon\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,UAAU,EAAEC,eAAe,QAAQ,oBAAoB;;AAEhE;AACA,IAAMC,QAAQ,GAAG,kCAAkC;AACnD,IAAMC,mBAAmB,GAAG,+DAA+D;AAC3F,IAAMC,eAAe,GAAG,4CAA4C;;AAEpE;AACA,IAAMC,MAAM,GAAG,SAATA,MAAM,GAA6B;EACvC,sBAAiBN,cAAc,EAAE;IAAzBO,IAAI,mBAAJA,IAAI;EACZ,IAAQC,OAAO,GAAKD,IAAI,CAAhBC,OAAO;;EAEf;EACA,IAAMC,MAAM,GAAG,MAAM;EACrB,IAAMC,WAAW,GAAG,kBAAkB;EAEtCX,SAAS,CAAC,YAAM;IACd,IAAMY,SAAS;MAAA,sEAAG;QAAA;QAAA;UAAA;YAAA;cACVC,QAAQ,GAAG,IAAIV,eAAe,CAAC;gBACnCW,gBAAgB,EAAET,mBAAmB;gBACrCU,OAAO,EAAET;cACX,CAAC,CAAC;cAEIU,MAAM,GAAG,IAAId,UAAU,CAACE,QAAQ,EAAES,QAAQ,CAAC;cAAA;cAAA;cAAA,OAGtBG,MAAM,CAACC,UAAU,CAACN,WAAW,EAAED,MAAM,EAAED,OAAO,CAAC;YAAA;cAAlES,UAAU;cAAA,IAEXA,UAAU;gBAAA;gBAAA;cAAA;cAAA,MACP,IAAIC,KAAK,8BAAuBR,WAAW,eAAKF,OAAO,cAAIC,MAAM,OAAI;YAAA;cAG7EU,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,UAAU,CAAC;cAAA;cAAA;YAAA;cAAA;cAAA;cAEvCE,OAAO,CAACE,KAAK,aAAG;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAEnB;MAAA,gBAnBKV,SAAS;QAAA;MAAA;IAAA,GAmBd;IAEDA,SAAS,EAAE;EACb,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAK,MAAI,CAAM;AACxB,CAAC;AAED,eAAeF,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}